name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    name: Lint, Build, Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run eslint

      - name: Run Build
        run: npm run build

      - name: Run Unit Tests
        run: npm run test

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm run test:e2e

      - name: Upload Playwright report
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  check_skip:
    name: Check for #skip in commits
    runs-on: ubuntu-latest
    needs: simple_deployment_pipeline
    outputs:
      should_skip: ${{ steps.check.outputs.should_skip }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check commit messages for #skip
        id: check
        run: |
          echo "Checking for #skip in commit messages..."
          if git log -1 --pretty=%B | grep -q "#skip"; then
            echo "should_skip=true" >> $GITHUB_OUTPUT
          else
            echo "should_skip=false" >> $GITHUB_OUTPUT
          fi


  deploy_to_render:
    name: Deploy to Render
    needs: check_skip
    if: ${{ needs.check_skip.outputs.should_skip == 'false' && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Trigger deployment
        uses: sws2apps/render-deployment@main
        with:
          serviceId: ${{ secrets.RENDER_SERVICE_ID }}
          apiKey: ${{ secrets.RENDER_API_KEY }}

  tag_and_notify:
    name: Tag Release and Notify
    needs: deploy_to_render
    if: ${{ success() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          DEFAULT_BRANCH: main
          WITH_V: true
          RELEASE_BRANCHES: main

      - name: Notify success
        run: |
          curl -H "Content-Type: application/json" \
          -X POST \
          -d '{
            "embeds": [{
              "title": "✅ New version deployed",
              "description": "A new version has been deployed and tagged on the `main` branch.",
              "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "color": 3066993,
              "footer": {
                "text": "Severity: Informational"
              },
              "timestamp": "'$(date --utc +%Y-%m-%dT%H:%M:%SZ)'"
            }]
          }' \
          ${{ secrets.DISCORD_WEBHOOK }}
        

  notify_failure:
    name: Notify Failure
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get last commit info
        id: commit
        run: |
          echo "message=$(git log -1 --pretty=format:'%s')" >> $GITHUB_OUTPUT
          echo "author=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
          echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Send Discord failure notification
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: error
          details: |
            ❌ Build Failed!
            Commit: ${{ steps.commit.outputs.sha }}
            Author: ${{ steps.commit.outputs.author }}
            Message: ${{ steps.commit.outputs.message }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
